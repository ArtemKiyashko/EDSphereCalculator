// <auto-generated />
using System;
using EDSphereCalculator;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EDSphereCalculator.Migrations
{
    [DbContext(typeof(EdsmDbContext))]
    [Migration("20200213132258_CreateEdsmDb")]
    partial class CreateEdsmDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EDSphereCalculator.CalculatorModels.CelestialBody", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StarId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StarId");

                    b.ToTable("CelestialBody");
                });

            modelBuilder.Entity("EDSphereCalculator.CalculatorModels.Distance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DistanceFromId")
                        .HasColumnType("int");

                    b.Property<int?>("DistanceToId")
                        .HasColumnType("int");

                    b.Property<double>("LightYears")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DistanceFromId");

                    b.HasIndex("DistanceToId");

                    b.ToTable("Distances");
                });

            modelBuilder.Entity("EDSphereCalculator.CalculatorModels.Star", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CoordinatesId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Id64")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CoordinatesId");

                    b.ToTable("Stars");
                });

            modelBuilder.Entity("EDSphereCalculator.CalculatorModels.StarCoordinates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("X")
                        .HasColumnType("float");

                    b.Property<double>("Y")
                        .HasColumnType("float");

                    b.Property<double>("Z")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("StarCoordinates");
                });

            modelBuilder.Entity("EDSphereCalculator.CalculatorModels.CelestialBody", b =>
                {
                    b.HasOne("EDSphereCalculator.CalculatorModels.Star", null)
                        .WithMany("Bodies")
                        .HasForeignKey("StarId");
                });

            modelBuilder.Entity("EDSphereCalculator.CalculatorModels.Distance", b =>
                {
                    b.HasOne("EDSphereCalculator.CalculatorModels.Star", "DistanceFrom")
                        .WithMany()
                        .HasForeignKey("DistanceFromId");

                    b.HasOne("EDSphereCalculator.CalculatorModels.Star", "DistanceTo")
                        .WithMany()
                        .HasForeignKey("DistanceToId");
                });

            modelBuilder.Entity("EDSphereCalculator.CalculatorModels.Star", b =>
                {
                    b.HasOne("EDSphereCalculator.CalculatorModels.StarCoordinates", "Coordinates")
                        .WithMany()
                        .HasForeignKey("CoordinatesId");
                });
#pragma warning restore 612, 618
        }
    }
}
